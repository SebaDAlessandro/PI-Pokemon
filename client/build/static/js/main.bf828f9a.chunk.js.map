{"version":3,"sources":["redux/actions/index.js","redux/reducer/index.js","redux/store/index.js","components/Landing/Landing.jsx","App.js","reportWebVitals.js","index.js"],"names":["GET_ALL_POKEMONS","GET_TYPES","GET_POKEMON_ID","GET_POKEMON_NAME","POST_POKEMON","ORDER_BY","FILTER_TYPES","FILTER_DBORAPI","initialState","allpokemons","pokemons","detail","types","rootReducer","state","action","type","actions","payload","aux","pokecopy","sort","a","b","name","attack","all","filtered","filter","e","includes","length","id","store","createStore","composeWithDevTools","applyMiddleware","thunk","Landing","App","className","exact","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bf828f9a.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport const GET_ALL_POKEMONS = 'GET ALL POKEMONS';\r\nexport const GET_TYPES = 'GET TYPES';\r\nexport const GET_POKEMON_ID = 'GET POKEMON ID';\r\nexport const GET_POKEMON_NAME = 'GET POKEMON NAME';\r\nexport const POST_POKEMON = 'POST POKEMON';\r\nexport const ORDER_BY = 'ORDER BY';\r\nexport const FILTER_TYPES = 'FILTER TYPES';\r\nexport const FILTER_DBORAPI = 'FILTER DBORAPI';\r\n\r\nexport const getAllPokemons = () => {\r\n    return async function (dispatch){\r\n        let aux = await axios.get(\"http://localhost:3001/pokemons/\")\r\n        return dispatch({\r\n            type: GET_ALL_POKEMONS,\r\n            payload: aux.data\r\n        })\r\n    }\r\n}\r\n\r\nexport const getTypes = () => {\r\n    return async function (dispatch){\r\n        let aux = await axios.get(\"http://localhost:3001/types/\")\r\n        return dispatch({\r\n            type: GET_TYPES,\r\n            payload: aux.data\r\n        })\r\n    }\r\n}\r\n\r\nexport const getPokemonID = (payload) => {\r\n    return async function (dispatch){\r\n        let aux = await axios.get(\"http://localhost:3001/pokemons/\"+payload)\r\n        return dispatch({\r\n            type: GET_POKEMON_ID,\r\n            payload: aux.data\r\n        })\r\n    }\r\n}\r\n\r\nexport const getPokemonName = (payload) => {\r\n    return async function (dispatch){\r\n        try{\r\n            let aux = await axios.get(\"http://localhost:3001/pokemons?name=\"+payload)\r\n            return dispatch({\r\n                type: GET_POKEMON_NAME,\r\n                payload: aux.data\r\n            })\r\n        }\r\n        catch(e){\r\n            return dispatch({\r\n                type: GET_POKEMON_NAME,\r\n                payload: \"Not Found\"\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const postPokemon = (payload) => {\r\n    return async function (dispatch){\r\n        let aux = await axios.post(\"http://localhost:3001/pokemons/\",payload)\r\n        return dispatch({\r\n            type: POST_POKEMON,\r\n            payload: aux\r\n        })\r\n    }\r\n}\r\n\r\nexport const orderBy = (payload) => {\r\n    return async function (dispatch) {\r\n        dispatch({type:ORDER_BY,payload})\r\n    }\r\n}\r\n\r\nexport const filterTypes = (payload) => {\r\n    return async function (dispatch){\r\n        dispatch({type:FILTER_TYPES,payload})\r\n    }\r\n}\r\n\r\nexport const filterDBorAPI = (payload) => {\r\n    return async function (dispatch){\r\n        dispatch({type:FILTER_DBORAPI,payload})\r\n    }\r\n}","import * as actions from '../actions/index';\r\n\r\nconst initialState = {\r\n    allpokemons: [],\r\n    pokemons: [],\r\n    detail: [],\r\n    types: [],\r\n}\r\n\r\nconst rootReducer = (state = initialState,action)=>{\r\n    switch(action.type){\r\n        case actions.GET_ALL_POKEMONS: return{\r\n            ...state,\r\n            allpokemons:action.payload,\r\n            pokemons:action.payload,\r\n        }\r\n        case actions.GET_POKEMON_NAME: return{\r\n            ...state,\r\n            pokemons:action.payload,\r\n        }\r\n        case actions.GET_POKEMON_ID: return{\r\n            ...state,\r\n            detail:action.payload,\r\n        }\r\n        case actions.POST_POKEMON: return{\r\n            ...state,\r\n        }\r\n        case actions.GET_TYPES: return{\r\n            ...state,\r\n            types:action.payload,\r\n        }\r\n        case actions.ORDER_BY:{\r\n            let pokecopy = [...state.pokemons];\r\n            let aux;\r\n            switch(action.payload){\r\n                case \"alph-asc\": aux = pokecopy.sort(function(a,b){\r\n                    if(a.name>b.name) return 1;\r\n                    if(a.name<b.name) return -1;\r\n                    return 0;\r\n                })\r\n                break;\r\n                case \"alph-des\": aux = pokecopy.sort(function(a,b){\r\n                    if(a.name>b.name) return -1;\r\n                    if(a.name<b.name) return 1;\r\n                    return 0;\r\n                })\r\n                break;\r\n                case \"att-asc\": aux = pokecopy.sort(function(a,b){\r\n                    if(a.attack>b.attack) return 1;\r\n                    if(a.attack<b.attack) return -1;\r\n                    return 0;\r\n                })\r\n                break;\r\n                case \"att-des\": aux = pokecopy.sort(function(a,b){\r\n                    if(a.attack>b.attack) return -1;\r\n                    if(a.attack<b.attack) return 1;\r\n                    return 0;\r\n                })\r\n                break;\r\n                default: return{\r\n                    ...state, pokemons:state.allpokemons\r\n                }\r\n            }\r\n        return {...state,pokemons:aux}\r\n        }\r\n        case actions.FILTER_TYPES:{\r\n            let all = state.allpokemons;\r\n            let filtered = [];\r\n            if(action.payload==='all'){\r\n                filtered = all;\r\n            }\r\n            else{\r\n                filtered = all.filter(e=>e.types.includes(action.payload));\r\n            }\r\n            if(filtered.length>0) return {...state,pokemons:filtered};\r\n            else return {...state,pokemons:\"Not Found\"};\r\n        }\r\n        case actions.FILTER_DBORAPI:{\r\n            let all = state.allpokemons;\r\n            let filtered = all;\r\n            if(action.payload==='api'){\r\n                filtered = all.filter(e=>typeof e.id==='number');\r\n            }\r\n            else if(action.payload==='db'){\r\n                filtered = all.filter(e=>typeof e.id!='number');\r\n            }\r\n            return{...state,pokemons:filtered};\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default rootReducer;","import { applyMiddleware, createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport rootReducer from '../reducer/index';\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n","// import { Link } from 'react-router-dom';\r\n\r\nfunction Landing(){\r\n    return(\r\n           <div> hola mundo! </div>   \r\n    )\r\n}\r\n\r\nexport default Landing;","import \"./App.css\";\nimport { Routes, Route } from 'react-router-dom';\nimport Landing from \"./components/Landing/Landing\";\n// import Home from \"./components/Home/Home\";\n// import PokemonDetail from \"./components/PokemonDetail/PokemonDetail\";\n// import CreatePokemon from \"./components/CreatePokemon/CreatePokemon\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routes>\n        <Route exact path=\"/\" element={<Landing/>}/>\n        {/* <Route exact path=\"/home\"  element={<Home/>}/>\n        <Route\n          path=\"/pokemon/:id\" element={<PokemonDetail/>} />\n        <Route exact path=\"/pokemon/create\" element={<CreatePokemon/>}/> */}\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store/index';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}